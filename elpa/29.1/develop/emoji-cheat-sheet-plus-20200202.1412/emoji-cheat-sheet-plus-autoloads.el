;;; emoji-cheat-sheet-plus-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from emoji-cheat-sheet-plus.el

(autoload 'emoji-cheat-sheet-plus-buffer "emoji-cheat-sheet-plus" "\
Open a new buffer with all the emojis." t)
(autoload 'emoji-cheat-sheet-plus-insert "emoji-cheat-sheet-plus" "\
Insert selected emojis from helm source." t)
(autoload 'emoji-cheat-sheet-plus-display-mode "emoji-cheat-sheet-plus" "\
Minor mode to display emoji cheat sheet images in buffer.

This is a minor mode.  If called interactively, toggle the
`emoji-Cheat-Sheet-Plus-Display mode' mode.  If the prefix
argument is positive, enable the mode, and if it is zero or
negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `emoji-cheat-sheet-plus-display-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "emoji-cheat-sheet-plus" '("emoji-cheat-sheet-plus-"))

;;; End of scraped data

(provide 'emoji-cheat-sheet-plus-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; emoji-cheat-sheet-plus-autoloads.el ends here
